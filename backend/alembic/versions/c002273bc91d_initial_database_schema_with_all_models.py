"""Initial database schema with all models

Revision ID: c002273bc91d
Revises:
Create Date: 2025-08-12 07:57:04.034561

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c002273bc91d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "achievement_categories",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("min_improvement_percent", sa.DECIMAL(precision=5, scale=2), nullable=True),
        sa.Column("min_score", sa.DECIMAL(precision=5, scale=2), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_achievement_categories_id"), "achievement_categories", ["id"], unique=False
    )
    op.create_table(
        "schools",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(op.f("ix_schools_id"), "schools", ["id"], unique=False)
    op.create_table(
        "subjects",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_subjects_id"), "subjects", ["id"], unique=False)
    op.create_table(
        "classes",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("section", sa.String(length=10), nullable=False),
        sa.Column("academic_year", sa.Integer(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["schools.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_classes_id"), "classes", ["id"], unique=False)
    op.create_index(op.f("ix_classes_school_id"), "classes", ["school_id"], unique=False)
    op.create_table(
        "terms",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("academic_year", sa.Integer(), nullable=False),
        sa.Column("term_number", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["schools.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_terms_id"), "terms", ["id"], unique=False)
    op.create_index(op.f("ix_terms_school_id"), "terms", ["school_id"], unique=False)
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column(
            "role", sa.Enum("FORM_TEACHER", "YEAR_HEAD", "ADMIN", name="userrole"), nullable=False
        ),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["schools.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_school_id"), "users", ["school_id"], unique=False)
    op.create_table(
        "students",
        sa.Column("student_id", sa.String(length=20), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["classes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["schools.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("student_id", "school_id", name="_student_school_uc"),
    )
    op.create_index(op.f("ix_students_class_id"), "students", ["class_id"], unique=False)
    op.create_index(op.f("ix_students_id"), "students", ["id"], unique=False)
    op.create_index(op.f("ix_students_school_id"), "students", ["school_id"], unique=False)
    op.create_table(
        "teacher_class_assignments",
        sa.Column("teacher_id", sa.Integer(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["classes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("teacher_id", "class_id", name="_teacher_class_uc"),
    )
    op.create_index(
        op.f("ix_teacher_class_assignments_class_id"),
        "teacher_class_assignments",
        ["class_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_teacher_class_assignments_id"), "teacher_class_assignments", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_teacher_class_assignments_teacher_id"),
        "teacher_class_assignments",
        ["teacher_id"],
        unique=False,
    )
    op.create_table(
        "grades",
        sa.Column("score", sa.DECIMAL(precision=5, scale=2), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("term_id", sa.Integer(), nullable=False),
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("modified_by_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.CheckConstraint("score >= 0 AND score <= 100", name="_score_range_check"),
        sa.ForeignKeyConstraint(
            ["modified_by_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
        ),
        sa.ForeignKeyConstraint(
            ["subject_id"],
            ["subjects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["terms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("student_id", "term_id", "subject_id", name="_student_term_subject_uc"),
    )
    op.create_index(op.f("ix_grades_id"), "grades", ["id"], unique=False)
    op.create_index(op.f("ix_grades_student_id"), "grades", ["student_id"], unique=False)
    op.create_index(op.f("ix_grades_subject_id"), "grades", ["subject_id"], unique=False)
    op.create_index(op.f("ix_grades_term_id"), "grades", ["term_id"], unique=False)
    op.create_table(
        "report_cards",
        sa.Column(
            "performance_band",
            sa.Enum(
                "OUTSTANDING", "GOOD", "SATISFACTORY", "NEEDS_IMPROVEMENT", name="performanceband"
            ),
            nullable=True,
        ),
        sa.Column("overall_average", sa.Float(), nullable=True),
        sa.Column("behavioral_comment", sa.Text(), nullable=True),
        sa.Column("teacher_comment", sa.Text(), nullable=True),
        sa.Column("pdf_path", sa.String(length=255), nullable=True),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("term_id", sa.Integer(), nullable=False),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
        ),
        sa.ForeignKeyConstraint(
            ["term_id"],
            ["terms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_report_cards_id"), "report_cards", ["id"], unique=False)
    op.create_index(
        op.f("ix_report_cards_student_id"), "report_cards", ["student_id"], unique=False
    )
    op.create_index(op.f("ix_report_cards_term_id"), "report_cards", ["term_id"], unique=False)
    op.create_table(
        "achievements",
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("report_card_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["achievement_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["report_card_id"],
            ["report_cards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_achievements_id"), "achievements", ["id"], unique=False)
    op.create_table(
        "report_components",
        sa.Column("component_type", sa.String(length=50), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("report_card_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["report_card_id"],
            ["report_cards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_report_components_id"), "report_components", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_report_components_id"), table_name="report_components")
    op.drop_table("report_components")
    op.drop_index(op.f("ix_achievements_id"), table_name="achievements")
    op.drop_table("achievements")
    op.drop_index(op.f("ix_report_cards_term_id"), table_name="report_cards")
    op.drop_index(op.f("ix_report_cards_student_id"), table_name="report_cards")
    op.drop_index(op.f("ix_report_cards_id"), table_name="report_cards")
    op.drop_table("report_cards")
    op.drop_index(op.f("ix_grades_term_id"), table_name="grades")
    op.drop_index(op.f("ix_grades_subject_id"), table_name="grades")
    op.drop_index(op.f("ix_grades_student_id"), table_name="grades")
    op.drop_index(op.f("ix_grades_id"), table_name="grades")
    op.drop_table("grades")
    op.drop_index(
        op.f("ix_teacher_class_assignments_teacher_id"), table_name="teacher_class_assignments"
    )
    op.drop_index(op.f("ix_teacher_class_assignments_id"), table_name="teacher_class_assignments")
    op.drop_index(
        op.f("ix_teacher_class_assignments_class_id"), table_name="teacher_class_assignments"
    )
    op.drop_table("teacher_class_assignments")
    op.drop_index(op.f("ix_students_school_id"), table_name="students")
    op.drop_index(op.f("ix_students_id"), table_name="students")
    op.drop_index(op.f("ix_students_class_id"), table_name="students")
    op.drop_table("students")
    op.drop_index(op.f("ix_users_school_id"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_terms_school_id"), table_name="terms")
    op.drop_index(op.f("ix_terms_id"), table_name="terms")
    op.drop_table("terms")
    op.drop_index(op.f("ix_classes_school_id"), table_name="classes")
    op.drop_index(op.f("ix_classes_id"), table_name="classes")
    op.drop_table("classes")
    op.drop_index(op.f("ix_subjects_id"), table_name="subjects")
    op.drop_table("subjects")
    op.drop_index(op.f("ix_schools_id"), table_name="schools")
    op.drop_table("schools")
    op.drop_index(op.f("ix_achievement_categories_id"), table_name="achievement_categories")
    op.drop_table("achievement_categories")
    # ### end Alembic commands ###
